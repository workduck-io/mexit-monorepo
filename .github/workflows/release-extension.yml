name: Release Extension
on:
  push:
    branches:
      - release
      - automated-releases-extension

jobs:
  build_extension:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
      YARN_TOKEN: ${{ secrets.YARN_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: "16.x"

      - name: Get Package Version
        id: get_package_version
        run: |
          content=`cat ./apps/extension/package.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ fromJson(steps.get_package_version.outputs.packageJson).version }}
          release_name: ${{ fromJson(steps.get_package_version.outputs.packageJson).version }}

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --network-timeout 1000000

      - name: Build Extension for Release
        run: yarn nx release extension

      - name: Zip Bundle
        working-directory: ./dist/apps/extension
        run: zip -r mexit-${{ fromJson(steps.get_package_version.outputs.packageJson).version }}.zip Assets background.js content.js index.html manifest.json

      - name: Upload Release Asset
        id: upload-release-asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ fromJson(steps.get_package_version.outputs.packageJson).version }}
          files: |
            dist/apps/extension/*.zip

      - name: Upload Zip Artifact
        uses: actions/upload-artifact@v2
        with:
          name: mexit-${{ fromJson(steps.get_package_version.outputs.packageJson).version }}.zip
          path: dist/apps/extension/mexit-${{ fromJson(steps.get_package_version.outputs.packageJson).version }}.zip

  upload_extension:
    runs-on: ubuntu-latest
    needs: build_extension
    env:
      GITHUB_TOKEN: ${{ github.token }}
      YARN_TOKEN: ${{ secrets.YARN_TOKEN }}
      CHROME_EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
      CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
      CHROME_CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
      CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
    steps:
    - name: Download .zip artifact from previous step
      uses: actions/download-artifact@v3
    - name: List Directory
      run: ls -lA
    - uses: actions/checkout@v2
    - name: Setup Node 
      uses: actions/setup-node@master
      with:
          node-version: "16.x"
    - name: Install dependencies
      run: npm install chrome-webstore-upload
    - name: node apps/extension/build/upload-extension.mjs
 