name: Release Extension
on:
  push:
    branches:
      - release

jobs:
  build_extension:
    runs-on: ubuntu-latest
    needs: create_github_release
    env:
      DEBUG: "*"
      GITHUB_TOKEN: ${{ github.token }}
      YARN_TOKEN: ${{ secrets.YARN_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: "16.x"

      - name: Get Package Version
        id: get_package_version
        run: |
          content=`cat ./apps/extension/package.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ fromJson(steps.get_package_version.outputs.packageJson).version }}
          release_name: ${{ fromJson(steps.get_package_version.outputs.packageJson).version }}

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --network-timeout 1000000

      - name: Build Extension for Release
        run: yarn nx release extension

      - name: Zip Bundle
        working-directory: ./dist/apps/extension
        run: zip -r mexit-${{ fromJson(steps.get_package_version.outputs.packageJson).version }}.zip Assets background.js content.js index.html manifest.json

      - name: Upload Release Asset
        id: upload-release-asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ fromJson(steps.get_package_version.outputs.packageJson).version }}
          files: |
            dist/apps/extension/*.zip
